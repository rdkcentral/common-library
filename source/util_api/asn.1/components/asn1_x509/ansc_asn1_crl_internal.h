/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_asn1_CRL_internal.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The Internal functions defined for ASN.1 objects

        *   ANSC_ASN1_CRL
        *   ANSC_ASN1_TBSCERTLIST
        *   ANSC_ASN1_REVOKEDCERTIFICATE
        *   ANSC_ASN1_REVOKEDCERTIFICATES
        *   ANSC_ASN1_SIGNATURE
        *   ANSC_ASN1_CERTIFICATELIST


    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   05/07/2002  initial revision

 **********************************************************************/


#ifndef  _ANSC_ASN1_CRL_INTERNAL_H
#define  _ANSC_ASN1_CRL_INTERNAL_H

/**********************************************************************

 OBJECT -- ANSC_ASN1_CRL

 CRL ::= Sequence 
     {
                       tbsCertList TBSCertList 
                 sigatureAlgorithm SignatureAlgorithmIdentifier 
                         signature Signature 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1CRLCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1CRLGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1CRLCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1CRLGetTbsCertList
    (
        ANSC_HANDLE                 hThisObject
    );

ANSC_HANDLE
AnscAsn1CRLGetSigatureAlgorithm
    (
        ANSC_HANDLE                 hThisObject
    );

ANSC_HANDLE
AnscAsn1CRLGetSignature
    (
        ANSC_HANDLE                 hThisObject
    );

/*
 *  Manually added functions
 */
ANSC_STATUS
AnscAsn1CRLFree
    (
        ANSC_HANDLE                 hThisObject
    );

ANSC_STATUS
AnscAsn1CRLBeforeDecodingChild
    (
        ANSC_HANDLE                 hThisObject,
        int                         index,
        PVOID*                      ppEncoding
    );

ANSC_STATUS
AnscAsn1CRLAfterDecodingChild
    (
        ANSC_HANDLE                 hThisObject,
        int                         index,
        PVOID*                      ppEncoding
    );

ANSC_STATUS
AnscAsn1CRLAfterDecoding
    (
        ANSC_HANDLE                 hThisObject,
        PVOID*                      ppEncoding
    );

ANSC_HANDLE
AnscAsn1CRLGetIssuerHandle
    (
        ANSC_HANDLE                 hThisObject
    );

ANSC_HANDLE
AnscAsn1CRLGetThisUpdateTime
    (
        ANSC_HANDLE                 hThisObject
    );

ANSC_HANDLE
AnscAsn1CRLGetNextUpdateTime
    (
        ANSC_HANDLE                 hThisObject
    );

BOOLEAN
AnscAsn1CRLVerify
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hPublicKeyInfo
    );

BOOLEAN
AnscAsn1CRLIsCertRevoked
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hSerialNumber
    );

BOOLEAN
AnscAsn1CRLEnumRevokedCert
    (
        ANSC_HANDLE                 hThisObject,
        EnumRevokedCertProc         proc,
        PVOID                       pData
    );

SIGNATURE_TYPE
AnscAsn1CRLGetSignatureType
    (
        ANSC_HANDLE                 hThisObject
    );

BOOLEAN
AnscAsn1CRLIsCRLExpired
    (
        ANSC_HANDLE                 hThisObject
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_TBSCERTLIST

 TBSCertList ::= Sequence 
     {
                           version Integer 
                         signature AlgorithmIdentifier 
                            issuer Name 
                        thisUpdate Time 
                        nextUpdate Time 
               revokedCertificates RevokedCertificates 
                     crlExtensions [CON 0] Extensions OPT
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1TBSCertListCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1TBSCertListGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1TBSCertListCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_REVOKEDCERTIFICATE

 RevokedCertificate ::= Sequence 
     {
             userCertificateNumber CertificateSerialNumber 
                    revocationDate Time 
                crlEntryExtensions Extensions 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1RevokedCertificateCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1RevokedCertificateGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1RevokedCertificateCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_REVOKEDCERTIFICATES

 RevokedCertificates ::= SequenceOf RevokedCertificate  {}

 **********************************************************************/

ANSC_STATUS
AnscAsn1RevokedCertificatesIsChildValid
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hChild
    );

ANSC_HANDLE
AnscAsn1RevokedCertificatesCreateChild
    (
        ANSC_HANDLE                 hThisObject,
        BOOLEAN                     bAddItIn
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_SIGNATURE

 Signature ::= BitString 

 **********************************************************************/

 /* No internal function is required for this object. */    

/**********************************************************************

 OBJECT -- ANSC_ASN1_CERTIFICATELIST

 CertificateList ::= CRL 

 **********************************************************************/

 /* No internal function is required for this object. */    


#endif  /*_ANSC_ASN1_CRL_INTERNAL_H*/

