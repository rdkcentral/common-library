/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_asn1_AlgorithmIdentifier_internal.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The Internal functions defined for ASN.1 objects

        *   ANSC_ASN1_ALGORITHMIDENTIFIER
        *   ANSC_ASN1_PARAMETERS
        *   ANSC_ASN1_DSS_PARMS
        *   ANSC_ASN1_DOMAINPARAMETERS
        *   ANSC_ASN1_VALIDATIONPARMS
        *   ANSC_ASN1_PBMPARAMETER
        *   ANSC_ASN1_DHBMPARAMETER
        *   ANSC_ASN1_CASE5MACPARAMETER
        *   ANSC_ASN1_PKCS12PBEPARAMS
        *   ANSC_ASN1_SIGNATUREALGORITHMIDENTIFIER
        *   ANSC_ASN1_SIGNATUREPARAMETERS
        *   ANSC_ASN1_DIGESTALGORITHMIDENTIFIER
        *   ANSC_ASN1_DHKEYAGREEMENT

    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   05/07/2002  initial revision
        *   05/08/2002  several functions are added for Algorithm object.

 **********************************************************************/


#ifndef  _ANSC_ASN1_ALGORITHMIDENTIFIER_INTERNAL_H
#define  _ANSC_ASN1_ALGORITHMIDENTIFIER_INTERNAL_H

/**********************************************************************

 OBJECT -- ANSC_ASN1_ALGORITHMIDENTIFIER

 AlgorithmIdentifier ::= Sequence 
     {
                      algorithmOID OID 
                        parameters Parameters OPT
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1AlgorithmIdentifierCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1AlgorithmIdentifierGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1AlgorithmIdentifierCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/*
 *  Manually added functions
 */
BOOLEAN
AnscAsn1AlgorithmGetAlgOIDStringValue
    (
        ANSC_HANDLE                 hThisObject,
        PCHAR                       pStringValue
    );

BOOLEAN
AnscAsn1AlgorithmSetAlgOIDStringValue
    (
        ANSC_HANDLE                 hThisObject,
        PCHAR                       pStringValue
    );

ANSC_STATUS
AnscAsn1AlgorithmAfterDecodingChild
    (
        ANSC_HANDLE                 hThisObject,
        int                         index,
        PVOID*                      ppEncoding
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_PARAMETERS

 Parameters ::= Choice 
     {
                         nullParms NULL 
                          dssParms Dss_Parms 
                       octetString OctetString 
                  domainParameters DomainParameters 
                      pbmParameter PBMParameter 
                     dhbmParameter DHBMParameter 
                 case5MacParameter Case5MacParameter 
                   pkcs12PbeParams PKCS12PbeParams 
                    dhKeyAgreement DHKeyAgreement 
     }

 **********************************************************************/
ANSC_HANDLE
AnscAsn1ParametersCreateSelection
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PANSC_ATTR_OBJECT
AnscAsn1ParametersCreateSelectionAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       selType
    );

PCHAR
AnscAsn1ParametersGetSelectionName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       selType
    );

LONG
AnscAsn1ParametersGetChoiceByOID
    (
        ANSC_HANDLE                 hThisObject,
        PCHAR                       pOIDString
    );

PCHAR
AnscAsn1ParametersGetOIDValueByMask
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       selType
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_DSS_PARMS

 Dss_Parms ::= Sequence 
     {
                                 p Integer 
                                 q Integer 
                                 g Integer 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1Dss_ParmsCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1Dss_ParmsGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1Dss_ParmsCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_DOMAINPARAMETERS

 DomainParameters ::= Sequence 
     {
                                 p Integer 
                                 g Integer 
                                 q Integer 
                                 j Integer 
                   validationParms ValidationParms 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1DomainParametersCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1DomainParametersGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1DomainParametersCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_VALIDATIONPARMS

 ValidationParms ::= Sequence 
     {
                              seed BitString 
                       pgenCounter Integer 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1ValidationParmsCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1ValidationParmsGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1ValidationParmsCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_PBMPARAMETER

 PBMParameter ::= Sequence 
     {
                              salt OctetString 
                               owf AlgorithmIdentifier 
                    iterationCount Integer 
                               mac AlgorithmIdentifier 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1PBMParameterCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1PBMParameterGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1PBMParameterCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_DHBMPARAMETER

 DHBMParameter ::= Sequence 
     {
                               owf AlgorithmIdentifier 
                               mac AlgorithmIdentifier 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1DHBMParameterCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1DHBMParameterGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1DHBMParameterCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_CASE5MACPARAMETER

 Case5MacParameter ::= Sequence 
     {
                         macLength Integer 
                         keyLength Integer 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1Case5MacParameterCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1Case5MacParameterGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1Case5MacParameterCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_PKCS12PBEPARAMS

 PKCS12PbeParams ::= Sequence 
     {
                              salt OctetString 
                        iterations Integer 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1PKCS12PbeParamsCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1PKCS12PbeParamsGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1PKCS12PbeParamsCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_SIGNATUREALGORITHMIDENTIFIER

 SignatureAlgorithmIdentifier ::= Sequence 
     {
                      algorithmOID OID 
               signatureParameters SignatureParameters 
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1SignatureAlgorithmIdentifierCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1SignatureAlgorithmIdentifierGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1SignatureAlgorithmIdentifierCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

/*
 *  Manually added functions
 */
BOOLEAN
AnscAsn1SignatureAlgorithmGetAlgOIDStringValue
    (
        ANSC_HANDLE                 hThisObject,
        PCHAR                       pStringValue
    );

BOOLEAN
AnscAsn1SignatureAlgorithmSetAlgOIDStringValue
    (
        ANSC_HANDLE                 hThisObject,
        PCHAR                       pStringValue
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_SIGNATUREPARAMETERS

 SignatureParameters ::= Choice 
     {
                         nullParms NULL 
     }

 **********************************************************************/

ANSC_HANDLE
AnscAsn1SignatureParametersCreateSelection
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PANSC_ATTR_OBJECT
AnscAsn1SignatureParametersCreateSelectionAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       selType
    );

PCHAR
AnscAsn1SignatureParametersGetSelectionName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       selType
    );

BOOLEAN
AnscAsn1SignatureParametersGetChoiceTagValue
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       uIndex,
        PASN_OBJECT_FORM_TYPE       pAttr,
        PULONG                      pTagValue
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_DIGESTALGORITHMIDENTIFIER

 DigestAlgorithmIdentifier ::= AlgorithmIdentifier 

 **********************************************************************/

 /* No internal function is required for this object. */    

/**********************************************************************

 OBJECT -- ANSC_ASN1_DHKEYAGREEMENT

 DHKeyAgreement ::= Sequence 
     {
                                 p Integer 
                                 g Integer 
                       priValueLen Integer OPT
     }

 **********************************************************************/

PANSC_ATTR_OBJECT
AnscAsn1DHKeyAgreementCreateChildAttr
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

PCHAR
AnscAsn1DHKeyAgreementGetChildName
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

ANSC_HANDLE
AnscAsn1DHKeyAgreementCreateChildObject
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       index
    );

#endif  /*_ANSC_ASN1_ALGORITHMIDENTIFIER_INTERNAL_H*/

