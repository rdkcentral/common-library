/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_asn1_PrivateKeyInfo_interface.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The ASN.1 object defined in this file

        *   ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO
        *   ANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER
        *   ANSC_ASN1_PRIVATEKEYINFO
        *   ANSC_ASN1_PRIVATEKEY
        *   ANSC_ASN1_RSAPRIVATEKEY
        *   ANSC_ASN1_DSAPRIVATEKEY


    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   05/01/2002  initial revision
        *   05/22/2002  add functions to sign and decrypt of private key

 **********************************************************************/


#ifndef  _ANSC_ASN1_PRIVATEKEYINFO_INTERFACE_H
#define  _ANSC_ASN1_PRIVATEKEYINFO_INTERFACE_H

#include "crypt_proc.h"

typedef BOOLEAN
(*PFN_PRI_INIT_KEY)
    (
        ANSC_HANDLE                 hThisObject,
        PKI_KEY_TYPE                keyType,
        ANSC_HANDLE                 hKeyGenHandle
    );

typedef ANSC_STATUS
(*PFN_PRI_EXPORT_KEY)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hKeyGenHandle
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO

 EncryptedPrivateKeyInfo ::= Sequence 
     {
               encryptionAlgorithm EncryptionAlgorithmIdentifier 
                     encryptedData OctetString 
         EXTRA:
                     privateKeyInfo PrivateKeyInfo 
     }

 **********************************************************************/

#define  ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO_CLASS_CONTENT ANSC_ASN1_SEQUENCE_CLASS_CONTENT


typedef  struct
_ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO
{
    ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO_CLASS_CONTENT
}
ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO,  *PANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO;

#define  ACCESS_ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ENCRYPTEDPRIVATEKEYINFO, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER

 EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier 

 **********************************************************************/

typedef  ANSC_ASN1_ALGORITHMIDENTIFIER ANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER,    \
         *PANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER;

#define  ACCESS_ANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ENCRYPTIONALGORITHMIDENTIFIER, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_PRIVATEKEYINFO

 PrivateKeyInfo ::= Sequence 
     {
                           version Integer 
               privateKeyAlgorithm AlgorithmIdentifier 
                   privateKeyOctet OctetString 
                        attributes [CON 0] IMP Attributes OPT
         EXTRA:
                         privateKey PrivateKey 
     }

 **********************************************************************/
typedef PKI_KEY_TYPE
(*PFN_PRI_GET_KEY_TYPE)
    (
        ANSC_HANDLE                 hThisObject
    );


#define  ANSC_ASN1_PRIVATEKEYINFO_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_PRI_INIT_KEY                InitKey;                          \
    PFN_PRI_EXPORT_KEY              ExportKey;                        \
    CRYPT_DECRYPTDATA_PROC          DecryptData;                      \
    CRYPT_SIGNDATA_PROC             SignData;                         \
    PFN_PRI_GET_KEY_TYPE            GetKeyType;                       \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_PRIVATEKEYINFO
{
    ANSC_ASN1_PRIVATEKEYINFO_CLASS_CONTENT
}
ANSC_ASN1_PRIVATEKEYINFO,  *PANSC_ASN1_PRIVATEKEYINFO;

#define  ACCESS_ANSC_ASN1_PRIVATEKEYINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PRIVATEKEYINFO, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_PRIVATEKEY

 PrivateKey ::= Choice 
     {
                     rsaPrivateKey RSAPrivateKey 
                     dsaPrivateKey DSAPrivateKey 
     }

 **********************************************************************/

#define  PRIVATEKEY_MASK_RSAPRIVATEKEY                             0x00
#define  PRIVATEKEY_MASK_DSAPRIVATEKEY                             0x01
#define  PRIVATEKEY_MAXI_MASK                                      0x01

#define  ANSC_ASN1_PRIVATEKEY_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    CRYPT_DECRYPTDATA_PROC          DecryptData;                      \
    PFN_PRI_INIT_KEY                InitKey;                          \
    PFN_PRI_EXPORT_KEY              ExportKey;                        \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_PRIVATEKEY
{
    ANSC_ASN1_PRIVATEKEY_CLASS_CONTENT
}
ANSC_ASN1_PRIVATEKEY,  *PANSC_ASN1_PRIVATEKEY;

#define  ACCESS_ANSC_ASN1_PRIVATEKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PRIVATEKEY, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_RSAPRIVATEKEY

 RSAPrivateKey ::= Sequence 
     {
                           version Integer 
                           modulus Integer 
                    publicExponent Integer 
                   privateExponent Integer 
                            prime1 Integer 
                            prime2 Integer 
                         exponent1 Integer 
                         exponent2 Integer 
                       coefficient Integer 
     }

 **********************************************************************/
typedef BOOLEAN
(*PFN_RSADSA_INIT_KEY)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hKeyGenHandle
    );

#define  ANSC_ASN1_RSAPRIVATEKEY_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    CRYPT_DECRYPTDATA_PROC          DecryptData;                      \
    PFN_RSADSA_INIT_KEY             InitKey;                          \
    PFN_PRI_EXPORT_KEY              ExportKey;                        \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_RSAPRIVATEKEY
{
    ANSC_ASN1_RSAPRIVATEKEY_CLASS_CONTENT
}
ANSC_ASN1_RSAPRIVATEKEY,  *PANSC_ASN1_RSAPRIVATEKEY;

#define  ACCESS_ANSC_ASN1_RSAPRIVATEKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_RSAPRIVATEKEY, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_DSAPRIVATEKEY

 DSAPrivateKey ::= Sequence 
     {
                                 y Integer 
                                 x Integer 
     }

 **********************************************************************/

#define  ANSC_ASN1_DSAPRIVATEKEY_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_RSADSA_INIT_KEY             InitKey;                          \
    PFN_PRI_EXPORT_KEY              ExportKey;                        \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_DSAPRIVATEKEY
{
    ANSC_ASN1_DSAPRIVATEKEY_CLASS_CONTENT
}
ANSC_ASN1_DSAPRIVATEKEY,  *PANSC_ASN1_DSAPRIVATEKEY;

#define  ACCESS_ANSC_ASN1_DSAPRIVATEKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_DSAPRIVATEKEY, Linkage)


#endif  /*_ANSC_ASN1_PRIVATEKEYINFO_INTERFACE_H*/


