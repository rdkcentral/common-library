/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_asn1_PublicKey_interface.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The ASN.1 object defined in this file

        *   ANSC_ASN1_PUBLICKEY
        *   ANSC_ASN1_RSAPUBLICKEY
        *   ANSC_ASN1_DSAPUBLICKEY
        *   ANSC_ASN1_DHPUBLICKEY
        *   ANSC_ASN1_KEYPAIR

    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   05/07/2002  initial revision
        *   08/09/2002  encryption functions are added
        *   08/13/2002  dhpublickey is added;
        *   08/14/2002  function added to check key matched or not
        *   01/06/2004  add new object "KeyPair"

 **********************************************************************/


#ifndef  _ANSC_ASN1_PUBLICKEY_INTERFACE_H
#define  _ANSC_ASN1_PUBLICKEY_INTERFACE_H

typedef BOOLEAN
(*PFN_KEY_MATCHING)
    (
        ANSC_HANDLE                 hThisHandle,
        PKI_KEY_TYPE                keyType,
        ANSC_HANDLE                 hKeyParams
    );

typedef ANSC_STATUS
(*PFN_KEY_EXPORT_KEY)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hKeyGenParams
    );

/**********************************************************************

 OBJECT -- ANSC_ASN1_PUBLICKEY

 PublicKey ::= Choice 
     {
                      dsaPublicKey DSAPublicKey 
                      rsaPublicKey RSAPublicKey 
                      dhPublicKey  DHPublicKey
     }

 **********************************************************************/
typedef ANSC_STATUS
(*PFN_ASN1_PUBLICKEY_VERIFY)
    (
        ANSC_HANDLE                 hThisHandle,
        ANSC_HANDLE                 hParams,
        PUCHAR                      pDataSigned,
        ULONG                       lengthOfData,
        SIGNATURE_TYPE              signType,
        PUCHAR                      pSignature,
        ULONG                       uLength
    );

#define  PUBLICKEY_MASK_DSAPUBLICKEY                               0x00
#define  PUBLICKEY_MASK_RSAPUBLICKEY                               0x01
#define  PUBLICKEY_MASK_DHPUBLICKEY                                0x02
#define  PUBLICKEY_MAXI_MASK                                       0x02

#define  ANSC_ASN1_PUBLICKEY_CLASS_CONTENT                            \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    PFN_ASN1_PUBLICKEY_VERIFY       Verify;                           \
    CRYPT_ENCRYPTDATA_PROC          Encrypt;                          \
    PFN_KEY_MATCHING                IsKeyMatching;                    \
    PFN_KEY_EXPORT_KEY              ExportPublicKey;                  \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PUBLICKEY
{
    ANSC_ASN1_PUBLICKEY_CLASS_CONTENT
}
ANSC_ASN1_PUBLICKEY,  *PANSC_ASN1_PUBLICKEY;

#define  ACCESS_ANSC_ASN1_PUBLICKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PUBLICKEY, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_RSAPUBLICKEY

 RSAPublicKey ::= Sequence 
     {
                           modulus Integer 
                    publicExponent Integer 
     }

 **********************************************************************/
typedef BOOLEAN
(*PFN_PUB_INIT_KEY)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hKeyGenHandle
    );

#define  ANSC_ASN1_RSAPUBLICKEY_CLASS_CONTENT                         \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_PUB_INIT_KEY                InitKey;                          \
    PFN_ASN1_PUBLICKEY_VERIFY       Verify;                           \
    CRYPT_ENCRYPTDATA_PROC          Encrypt;                          \
    PFN_KEY_MATCHING                IsKeyMatching;                    \
    PFN_KEY_EXPORT_KEY              ExportPublicKey;                  \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_RSAPUBLICKEY
{
    ANSC_ASN1_RSAPUBLICKEY_CLASS_CONTENT
}
ANSC_ASN1_RSAPUBLICKEY,  *PANSC_ASN1_RSAPUBLICKEY;

#define  ACCESS_ANSC_ASN1_RSAPUBLICKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_RSAPUBLICKEY, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_DHPUBLICKEY

 DHPublicKey ::= Integer 

 **********************************************************************/

#define  ANSC_ASN1_DHPUBLICKEY_CLASS_CONTENT                          \
    /* duplication of the base object class content */                \
    ANSC_ASN1_INTEGER_CLASS_CONTENT                                   \
    /* start of object class content */                               \
    PFN_PUB_INIT_KEY                InitKey;                          \
    PFN_KEY_MATCHING                IsKeyMatching;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_DHPUBLICKEY
{
    ANSC_ASN1_DHPUBLICKEY_CLASS_CONTENT
}
ANSC_ASN1_DHPUBLICKEY,  *PANSC_ASN1_DHPUBLICKEY;

#define  ACCESS_ANSC_ASN1_DHPUBLICKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_DHPUBLICKEY, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_DSAPUBLICKEY

 DSAPublicKey ::= Integer 

 **********************************************************************/

#define  ANSC_ASN1_DSAPUBLICKEY_CLASS_CONTENT                         \
    /* duplication of the base object class content */                \
    ANSC_ASN1_INTEGER_CLASS_CONTENT                                   \
    /* start of object class content */                               \
    PFN_PUB_INIT_KEY                InitKey;                          \
    PFN_ASN1_PUBLICKEY_VERIFY       Verify;                           \
    PFN_KEY_MATCHING                IsKeyMatching;                    \
    PFN_KEY_EXPORT_KEY              ExportPublicKey;                  \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_DSAPUBLICKEY
{
    ANSC_ASN1_DSAPUBLICKEY_CLASS_CONTENT
}
ANSC_ASN1_DSAPUBLICKEY,  *PANSC_ASN1_DSAPUBLICKEY;

#define  ACCESS_ANSC_ASN1_DSAPUBLICKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_DSAPUBLICKEY, Linkage)


/**********************************************************************

 OBJECT -- ANSC_ASN1_KEYPAIR

 KeyPair ::= Sequence 
     {
                           keyType Integer 
                            pubKey PublicKey
                            priKey PrivateKeyInfo
     }

 **********************************************************************/
typedef ANSC_STATUS
(*PFN_KEYPAIR_IMPORT)
    (
        ANSC_HANDLE                 hThisObject,
        ULONG                       uKeyType,
        ANSC_HANDLE                 hKeyGenHandle
    );


typedef ANSC_STATUS
(*PFN_KEYPAIR_EXPORT)
    (
        ANSC_HANDLE                 hThisObject,
        PULONG                      puKeyType,
        ANSC_HANDLE                 hKeyGenHandle
    );

#define  ANSC_ASN1_KEYPAIR_CLASS_CONTENT                              \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_KEYPAIR_IMPORT              InitKey;                          \
    PFN_KEYPAIR_EXPORT              ExportKey;                        \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_KEYPAIR
{
    ANSC_ASN1_KEYPAIR_CLASS_CONTENT
}
ANSC_ASN1_KEYPAIR,  *PANSC_ASN1_KEYPAIR;

#define  ACCESS_ANSC_ASN1_KEYPAIR(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_KEYPAIR, Linkage)

#endif  /*_ANSC_ASN1_PUBLICKEY_INTERFACE_H*/


