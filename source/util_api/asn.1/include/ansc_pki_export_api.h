/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_pki_export_api.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        This interface is for the entity of PKI implementation.

        The entity is responsible for generating key pair, pkcs10
        certificate request, self-signed certificate.

    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        Bin Zhu

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   08/13/2002  initial revision

 **********************************************************************/


#ifndef  _ANSC_PKI_EXPORT_API_H
#define  _ANSC_PKI_EXPORT_API_H

#include "crypt_proc.h"

PALCERTIFICATE_ATTRIBUTE
GenerateAttrByCertificate
    (
        PANSC_ASN1_CERTIFICATE      pCert
    );

/*************************************************************************
 *
 * This is the basic api to generate a PKI_ENTITY which is responsible to 
 * generate the key pair, PKCS10 request and selfsigned certificate.
 *
 * The handle "hCertAttr" could not be NULL here.
 *
 *************************************************************************/
ANSC_HANDLE 
AnscCreatePKIEntity
    (
        ANSC_HANDLE                 hContext,
        ANSC_HANDLE                 hCertAttr,
        ANSC_HANDLE                 hReserved
    );

/**************************************************************************
 *  For smartcard support
 *
 *  If the private key is not accessible, the cryptoAPI is
 *  required to sign and decrypt data.
 *
 *  The CryptoAPI was defined in "crypt_proc.h"
 *
 *  typedef  struct
 *  _CRYPT_API_STRUCT
 *  {
 *          CRYPT_GETKEYTYPE_PROC       pGetKeyType;
 *          CRYPT_GETKEYLENGTH_PROC     pGetKeyLength;
 *          CRYPT_GETPUBLICKEYINFO_PROC pGetPublicKeyInfo;
 *          CRYPT_SIGNDATA_PROC         pSignData;
 *          CRYPT_ENCRYPTDATA_PROC      pEncryptData;
 *          CRYPT_DECRYPTDATA_PROC      pDecryptData;
 *  }
 *  CRYPT_API_STRUCT, *PCRYPT_API_STRUCT;
 *
 * NOTE:  
 *  A. The "hCertAttr" here could be NULL if subject cert is already
 *     available.
 *  B. The entity will make a copy of the CryptoAPI handle.
 *
 **************************************************************************/
ANSC_HANDLE 
AnscCreatePKIEntityWithCryptoAPI
    (
        ANSC_HANDLE                 hContext,
        ANSC_HANDLE                 hCertAttr,
        ANSC_HANDLE                 hCryptoAPI,
        ANSC_HANDLE                 hReserved
    );

/*************************************************************************
 *
 * This api is for the old AL_CERT implementation which have certificate
 * and private key encoding ready and don't need generating PKCS10 request
 * or selfsigned-certificate.
 *
 *************************************************************************/
ANSC_HANDLE 
AnscCreatePKIEntityWithCert
    (
        ANSC_HANDLE                 hContext,
        ANSC_HANDLE                 hReserved,
        ANSC_HANDLE                 hCertAttr,
        PUCHAR                      pEncodingCert,
        ULONG                       lenOfCert,
        PUCHAR                      pPriKeyInfoEncode,
        ULONG                       lenOfKey
    );

/*************************************************************************
 *
 * This api is for the user entity already has key pair but no certificate
 * yet.
 *
 *************************************************************************/
ANSC_HANDLE 
AnscCreatePKIEntityWithKeyPair
    (
        ANSC_HANDLE                 hContext,
        ANSC_HANDLE                 hReserved,
        PCHAR                       pDNName,
        ULONG                       keyType,
        ANSC_HANDLE                 hKeyPair
    );

/**************************************************************
 *  Free the memory
 ***************************************************************/
ANSC_STATUS
PKIEntityRemove
    (
        ANSC_HANDLE                 hThisObject
    );

#endif  /*_ANSC_PKI_EXPORT_API_H*/


