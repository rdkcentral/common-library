/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: asn1_pkimessage_interface.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The ASN.1 object defined in this file

        *   ASN1_PKIMESSAGE
        *   ASN1_PKIHEADER
        *   ASN1_CMPGENERALINFO
        *   ASN1_PKIFREETEXT
        *   ASN1_PKIBODY
        *   ASN1_PKIPROTECTION
        *   ASN1_PROTECTEDPART
        *   ASN1_NESTEDMESSAGECONTENT
        *   ASN1_PKISTATUS
        *   ASN1_PKIFAILUREINFO
        *   ASN1_PKISTATUSINFO
        *   ASN1_OOBCERT
        *   ASN1_OOBCERTHASH
        *   ASN1_POPODECKEYCHALLCONTENT
        *   ASN1_CHALLENGE
        *   ASN1_POPODECKEYRESPCONTENT
        *   ASN1_CERTREPMESSAGE
        *   ASN1_CERTRESPONSES
        *   ASN1_RESPONSE
        *   ASN1_CERTIFIEDKEYPAIR
        *   ASN1_CERTORENCCERT
        *   ASN1_REVREQCONTENT
        *   ASN1_REVDETAILS
        *   ASN1_KEYRECREPCONTENT
        *   ASN1_CERTIFIEDKEYPAIRS
        *   ASN1_CAKEYUPDANNCONTENT
        *   ASN1_CERTANNCONTENT
        *   ASN1_REVANNCONTENT
        *   ASN1_CRLANNCONTENT
        *   ASN1_REVREPCONTENT
        *   ASN1_PKISTATUSINFOS
        *   ASN1_CERTIDS
        *   ASN1_CERTIFICATELISTS
        *   ASN1_PKICONFIRMCONTENT
        *   ASN1_INFOTYPEANDVALUE
        *   ASN1_ALGORITHMS
        *   ASN1_INFOVALUE
        *   ASN1_GENMSGCONTENT
        *   ASN1_GENREPCONTENT
        *   ASN1_ERRORMSGCONTENT
        *   ASN1_CERTCONFIRMCONTENT
        *   ASN1_CERTSTATUS


    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   12/13/2002  initial revision

 **********************************************************************/


#ifndef  _ASN1_PKIMESSAGE_INTERFACE_H
#define  _ASN1_PKIMESSAGE_INTERFACE_H

/**********************************************************************

 OBJECT -- ASN1_PKIMESSAGE

 PKIMessage ::= Sequence 
     {
                            header PKIHeader 
                              body PKIBody 
                        protection [CON 0] PKIProtection OPT
                        extraCerts [CON 1] Certificates OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_PKIMESSAGE_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetHeader;                        \
    PFN_ASN1_GET_CHILD              GetBody;                          \
    PFN_ASN1_GET_CHILD              GetProtection;                    \
    PFN_ASN1_GET_CHILD              GetExtraCerts;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIMESSAGE
{
    ANSC_ASN1_PKIMESSAGE_CLASS_CONTENT
}
ANSC_ASN1_PKIMESSAGE,  *PANSC_ASN1_PKIMESSAGE;

#define  ACCESS_ANSC_ASN1_PKIMESSAGE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIMESSAGE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIHEADER

 PKIHeader ::= Sequence 
     {
                              pvno Integer 
                            sender GeneralName 
                         recipient GeneralName 
                       messageTime [CON 0] GeneralizedTime OPT
                     protectionAlg [CON 1] AlgorithmIdentifier OPT
                         senderKID [CON 2] KeyIdentifier OPT
                          recipKID [CON 3] KeyIdentifier OPT
                     transactionID [CON 4] OctetString OPT
                       senderNonce [CON 5] OctetString OPT
                        recipNonce [CON 6] OctetString OPT
                          freeText [CON 7] PKIFreeText OPT
                       generalInfo [CON 8] CMPGeneralInfo OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_PKIHEADER_CLASS_CONTENT                            \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetPvno;                          \
    PFN_ASN1_GET_CHILD              GetSender;                        \
    PFN_ASN1_GET_CHILD              GetRecipient;                     \
    PFN_ASN1_GET_CHILD              GetMessageTime;                   \
    PFN_ASN1_GET_CHILD              GetProtectionAlg;                 \
    PFN_ASN1_GET_CHILD              GetSenderKID;                     \
    PFN_ASN1_GET_CHILD              GetRecipKID;                      \
    PFN_ASN1_GET_CHILD              GetTransactionID;                 \
    PFN_ASN1_GET_CHILD              GetSenderNonce;                   \
    PFN_ASN1_GET_CHILD              GetRecipNonce;                    \
    PFN_ASN1_GET_CHILD              GetFreeText;                      \
    PFN_ASN1_GET_CHILD              GetGeneralInfo;                   \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIHEADER
{
    ANSC_ASN1_PKIHEADER_CLASS_CONTENT
}
ANSC_ASN1_PKIHEADER,  *PANSC_ASN1_PKIHEADER;

#define  ACCESS_ANSC_ASN1_PKIHEADER(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIHEADER, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CMPGENERALINFO

 CMPGeneralInfo ::= SequenceOf InfoTypeAndValue  {}

 **********************************************************************/

#define  ANSC_ASN1_CMPGENERALINFO_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CMPGENERALINFO
{
    ANSC_ASN1_CMPGENERALINFO_CLASS_CONTENT
}
ANSC_ASN1_CMPGENERALINFO,  *PANSC_ASN1_CMPGENERALINFO;

#define  ACCESS_ANSC_ASN1_CMPGENERALINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CMPGENERALINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIFREETEXT

 PKIFreeText ::= SequenceOf UTF8String  {}

 **********************************************************************/

#define  ANSC_ASN1_PKIFREETEXT_CLASS_CONTENT                          \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIFREETEXT
{
    ANSC_ASN1_PKIFREETEXT_CLASS_CONTENT
}
ANSC_ASN1_PKIFREETEXT,  *PANSC_ASN1_PKIFREETEXT;

#define  ACCESS_ANSC_ASN1_PKIFREETEXT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIFREETEXT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIBODY

 PKIBody ::= Choice 
     {
                                ir [CON 0] CertReqMessages 
                                ip [CON 1] CertRepMessage 
                                cr [CON 2] CertReqMessages 
                                cp [CON 3] CertRepMessage 
                             p10cr [CON 4] CertificateRequest 
                           popdecc [CON 5] POPODecKeyChallContent 
                           popdecr [CON 6] POPODecKeyRespContent 
                               kur [CON 7] CertReqMessages 
                               kup [CON 8] CertRepMessage 
                               krr [CON 9] CertReqMessages 
                               krp [CON 10] KeyRecRepContent 
                                rr [CON 11] RevReqContent 
                                rp [CON 12] RevRepContent 
                               ccr [CON 13] CertReqMessages 
                               ccp [CON 14] CertRepMessage 
                            ckuann [CON 15] CAKeyUpdAnnContent 
                              cann [CON 16] CertAnnContent 
                              rann [CON 17] RevAnnContent 
                            crlann [CON 18] CRLAnnContent 
                              conf [CON 19] PKIConfirmContent 
                            nested [CON 20] NestedMessageContent 
                              genm [CON 21] GenMsgContent 
                              genp [CON 22] GenRepContent 
                             error [CON 23] ErrorMsgContent 
                          certConf CertConfirmContent 
     }

 **********************************************************************/

#define  PKIBODY_MASK_IR                                           0x00
#define  PKIBODY_MASK_IP                                           0x01
#define  PKIBODY_MASK_CR                                           0x02
#define  PKIBODY_MASK_CP                                           0x03
#define  PKIBODY_MASK_P10CR                                        0x04
#define  PKIBODY_MASK_POPDECC                                      0x05
#define  PKIBODY_MASK_POPDECR                                      0x06
#define  PKIBODY_MASK_KUR                                          0x07
#define  PKIBODY_MASK_KUP                                          0x08
#define  PKIBODY_MASK_KRR                                          0x09
#define  PKIBODY_MASK_KRP                                          0x0A
#define  PKIBODY_MASK_RR                                           0x0B
#define  PKIBODY_MASK_RP                                           0x0C
#define  PKIBODY_MASK_CCR                                          0x0D
#define  PKIBODY_MASK_CCP                                          0x0E
#define  PKIBODY_MASK_CKUANN                                       0x0F
#define  PKIBODY_MASK_CANN                                         0x10
#define  PKIBODY_MASK_RANN                                         0x11
#define  PKIBODY_MASK_CRLANN                                       0x12
#define  PKIBODY_MASK_CONF                                         0x13
#define  PKIBODY_MASK_NESTED                                       0x14
#define  PKIBODY_MASK_GENM                                         0x15
#define  PKIBODY_MASK_GENP                                         0x16
#define  PKIBODY_MASK_ERROR                                        0x17
#define  PKIBODY_MASK_CERTCONF                                     0x18
#define  PKIBODY_MAXI_MASK                                         0x18

#define  ANSC_ASN1_PKIBODY_CLASS_CONTENT                              \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIBODY
{
    ANSC_ASN1_PKIBODY_CLASS_CONTENT
}
ANSC_ASN1_PKIBODY,  *PANSC_ASN1_PKIBODY;

#define  ACCESS_ANSC_ASN1_PKIBODY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIBODY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIPROTECTION

 PKIProtection ::= BitString 

 **********************************************************************/

#define  ANSC_ASN1_PKIPROTECTION_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_BITSTRING_CLASS_CONTENT                                 \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIPROTECTION
{
    ANSC_ASN1_PKIPROTECTION_CLASS_CONTENT
}
ANSC_ASN1_PKIPROTECTION,  *PANSC_ASN1_PKIPROTECTION;

#define  ACCESS_ANSC_ASN1_PKIPROTECTION(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIPROTECTION, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PROTECTEDPART

 ProtectedPart ::= Sequence 
     {
                            header PKIHeader 
                              body PKIBody 
     }

 **********************************************************************/

#define  ANSC_ASN1_PROTECTEDPART_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetHeader;                        \
    PFN_ASN1_GET_CHILD              GetBody;                          \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PROTECTEDPART
{
    ANSC_ASN1_PROTECTEDPART_CLASS_CONTENT
}
ANSC_ASN1_PROTECTEDPART,  *PANSC_ASN1_PROTECTEDPART;

#define  ACCESS_ANSC_ASN1_PROTECTEDPART(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PROTECTEDPART, Linkage)

/**********************************************************************

 OBJECT -- ASN1_NESTEDMESSAGECONTENT

 NestedMessageContent ::= PKIMessage 

 **********************************************************************/

#define  ANSC_ASN1_NESTEDMESSAGECONTENT_CLASS_CONTENT                 \
    /* duplication of the base object class content */                \
    ANSC_ASN1_PKIMESSAGE_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_NESTEDMESSAGECONTENT
{
    ANSC_ASN1_NESTEDMESSAGECONTENT_CLASS_CONTENT
}
ANSC_ASN1_NESTEDMESSAGECONTENT,  *PANSC_ASN1_NESTEDMESSAGECONTENT;

#define  ACCESS_ANSC_ASN1_NESTEDMESSAGECONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_NESTEDMESSAGECONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKISTATUS

 PKIStatus ::= Integer 

 **********************************************************************/

#define  ANSC_ASN1_PKISTATUS_CLASS_CONTENT                            \
    /* duplication of the base object class content */                \
    ANSC_ASN1_INTEGER_CLASS_CONTENT                                   \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKISTATUS
{
    ANSC_ASN1_PKISTATUS_CLASS_CONTENT
}
ANSC_ASN1_PKISTATUS,  *PANSC_ASN1_PKISTATUS;

#define  ACCESS_ANSC_ASN1_PKISTATUS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKISTATUS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIFAILUREINFO

 PKIFailureInfo ::= BitString 

 **********************************************************************/

#define  ANSC_ASN1_PKIFAILUREINFO_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_BITSTRING_CLASS_CONTENT                                 \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIFAILUREINFO
{
    ANSC_ASN1_PKIFAILUREINFO_CLASS_CONTENT
}
ANSC_ASN1_PKIFAILUREINFO,  *PANSC_ASN1_PKIFAILUREINFO;

#define  ACCESS_ANSC_ASN1_PKIFAILUREINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIFAILUREINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKISTATUSINFO

 PKIStatusInfo ::= Sequence 
     {
                            status PKIStatus 
                      statusString PKIFreeText OPT
                          failInfo PKIFailureInfo OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_PKISTATUSINFO_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetStatus;                        \
    PFN_ASN1_GET_CHILD              GetStatusString;                  \
    PFN_ASN1_GET_CHILD              GetFailInfo;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKISTATUSINFO
{
    ANSC_ASN1_PKISTATUSINFO_CLASS_CONTENT
}
ANSC_ASN1_PKISTATUSINFO,  *PANSC_ASN1_PKISTATUSINFO;

#define  ACCESS_ANSC_ASN1_PKISTATUSINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKISTATUSINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_OOBCERT

 OOBCert ::= Certificate 

 **********************************************************************/

#define  ANSC_ASN1_OOBCERT_CLASS_CONTENT                              \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CERTIFICATE_CLASS_CONTENT                               \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_OOBCERT
{
    ANSC_ASN1_OOBCERT_CLASS_CONTENT
}
ANSC_ASN1_OOBCERT,  *PANSC_ASN1_OOBCERT;

#define  ACCESS_ANSC_ASN1_OOBCERT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_OOBCERT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_OOBCERTHASH

 OOBCertHash ::= Sequence 
     {
                           hashAlg [CON 0] AlgorithmIdentifier OPT
                            certId [CON 1] CertId OPT
                           hashVal BitString 
     }

 **********************************************************************/

#define  ANSC_ASN1_OOBCERTHASH_CLASS_CONTENT                          \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetHashAlg;                       \
    PFN_ASN1_GET_CHILD              GetCertId;                        \
    PFN_ASN1_GET_CHILD              GetHashVal;                       \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_OOBCERTHASH
{
    ANSC_ASN1_OOBCERTHASH_CLASS_CONTENT
}
ANSC_ASN1_OOBCERTHASH,  *PANSC_ASN1_OOBCERTHASH;

#define  ACCESS_ANSC_ASN1_OOBCERTHASH(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_OOBCERTHASH, Linkage)

/**********************************************************************

 OBJECT -- ASN1_POPODECKEYCHALLCONTENT

 POPODecKeyChallContent ::= SequenceOf Challenge  {}

 **********************************************************************/

#define  ANSC_ASN1_POPODECKEYCHALLCONTENT_CLASS_CONTENT               \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_POPODECKEYCHALLCONTENT
{
    ANSC_ASN1_POPODECKEYCHALLCONTENT_CLASS_CONTENT
}
ANSC_ASN1_POPODECKEYCHALLCONTENT,  *PANSC_ASN1_POPODECKEYCHALLCONTENT;

#define  ACCESS_ANSC_ASN1_POPODECKEYCHALLCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_POPODECKEYCHALLCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CHALLENGE

 Challenge ::= Sequence 
     {
                               owf AlgorithmIdentifier OPT
                           witness OctetString 
                         challenge OctetString 
     }

 **********************************************************************/

#define  ANSC_ASN1_CHALLENGE_CLASS_CONTENT                            \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetOwf;                           \
    PFN_ASN1_GET_CHILD              GetWitness;                       \
    PFN_ASN1_GET_CHILD              GetChallenge;                     \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CHALLENGE
{
    ANSC_ASN1_CHALLENGE_CLASS_CONTENT
}
ANSC_ASN1_CHALLENGE,  *PANSC_ASN1_CHALLENGE;

#define  ACCESS_ANSC_ASN1_CHALLENGE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CHALLENGE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_POPODECKEYRESPCONTENT

 POPODecKeyRespContent ::= SequenceOf Integer  {}

 **********************************************************************/

#define  ANSC_ASN1_POPODECKEYRESPCONTENT_CLASS_CONTENT                \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_POPODECKEYRESPCONTENT
{
    ANSC_ASN1_POPODECKEYRESPCONTENT_CLASS_CONTENT
}
ANSC_ASN1_POPODECKEYRESPCONTENT,  *PANSC_ASN1_POPODECKEYRESPCONTENT;

#define  ACCESS_ANSC_ASN1_POPODECKEYRESPCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_POPODECKEYRESPCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTREPMESSAGE

 CertRepMessage ::= Sequence 
     {
                            caPubs [CON 1] Certificates OPT
                          response CertResponses 
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTREPMESSAGE_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCaPubs;                        \
    PFN_ASN1_GET_CHILD              GetResponse;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTREPMESSAGE
{
    ANSC_ASN1_CERTREPMESSAGE_CLASS_CONTENT
}
ANSC_ASN1_CERTREPMESSAGE,  *PANSC_ASN1_CERTREPMESSAGE;

#define  ACCESS_ANSC_ASN1_CERTREPMESSAGE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTREPMESSAGE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTRESPONSES

 CertResponses ::= SequenceOf Response  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTRESPONSES_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTRESPONSES
{
    ANSC_ASN1_CERTRESPONSES_CLASS_CONTENT
}
ANSC_ASN1_CERTRESPONSES,  *PANSC_ASN1_CERTRESPONSES;

#define  ACCESS_ANSC_ASN1_CERTRESPONSES(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTRESPONSES, Linkage)

/**********************************************************************

 OBJECT -- ASN1_RESPONSE

 Response ::= Sequence 
     {
                         certReqId Integer 
                            status PKIStatusInfo 
                  certifiedKeyPair CertifiedKeyPair OPT
                           rspInfo OctetString OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_RESPONSE_CLASS_CONTENT                             \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertReqId;                     \
    PFN_ASN1_GET_CHILD              GetStatus;                        \
    PFN_ASN1_GET_CHILD              GetCertifiedKeyPair;              \
    PFN_ASN1_GET_CHILD              GetRspInfo;                       \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_RESPONSE
{
    ANSC_ASN1_RESPONSE_CLASS_CONTENT
}
ANSC_ASN1_RESPONSE,  *PANSC_ASN1_RESPONSE;

#define  ACCESS_ANSC_ASN1_RESPONSE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_RESPONSE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTIFIEDKEYPAIR

 CertifiedKeyPair ::= Sequence 
     {
                     certOrEncCert CertOrEncCert 
                        privateKey [CON 0] EncryptedValue OPT
                   publicationInfo [CON 1] PKIPublicationInfo OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTIFIEDKEYPAIR_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertOrEncCert;                 \
    PFN_ASN1_GET_CHILD              GetPrivateKey;                    \
    PFN_ASN1_GET_CHILD              GetPublicationInfo;               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTIFIEDKEYPAIR
{
    ANSC_ASN1_CERTIFIEDKEYPAIR_CLASS_CONTENT
}
ANSC_ASN1_CERTIFIEDKEYPAIR,  *PANSC_ASN1_CERTIFIEDKEYPAIR;

#define  ACCESS_ANSC_ASN1_CERTIFIEDKEYPAIR(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIFIEDKEYPAIR, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTORENCCERT

 CertOrEncCert ::= Choice 
     {
                       certificate [CON 0] Certificate 
                     encryptedCert [CON 1] EncryptedValue 
     }

 **********************************************************************/

#define  CERTORENCCERT_MASK_CERTIFICATE                            0x00
#define  CERTORENCCERT_MASK_ENCRYPTEDCERT                          0x01
#define  CERTORENCCERT_MAXI_MASK                                   0x01

#define  ANSC_ASN1_CERTORENCCERT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTORENCCERT
{
    ANSC_ASN1_CERTORENCCERT_CLASS_CONTENT
}
ANSC_ASN1_CERTORENCCERT,  *PANSC_ASN1_CERTORENCCERT;

#define  ACCESS_ANSC_ASN1_CERTORENCCERT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTORENCCERT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REVREQCONTENT

 RevReqContent ::= SequenceOf RevDetails  {}

 **********************************************************************/

#define  ANSC_ASN1_REVREQCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REVREQCONTENT
{
    ANSC_ASN1_REVREQCONTENT_CLASS_CONTENT
}
ANSC_ASN1_REVREQCONTENT,  *PANSC_ASN1_REVREQCONTENT;

#define  ACCESS_ANSC_ASN1_REVREQCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REVREQCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REVDETAILS

 RevDetails ::= Sequence 
     {
                       certDetails CertTemplate 
                  revocationReason ReasonFlags OPT
                      badSinceDate GeneralizedTime OPT
                   crlEntryDetails Extensions OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_REVDETAILS_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertDetails;                   \
    PFN_ASN1_GET_CHILD              GetRevocationReason;              \
    PFN_ASN1_GET_CHILD              GetBadSinceDate;                  \
    PFN_ASN1_GET_CHILD              GetCrlEntryDetails;               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REVDETAILS
{
    ANSC_ASN1_REVDETAILS_CLASS_CONTENT
}
ANSC_ASN1_REVDETAILS,  *PANSC_ASN1_REVDETAILS;

#define  ACCESS_ANSC_ASN1_REVDETAILS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REVDETAILS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_KEYRECREPCONTENT

 KeyRecRepContent ::= Sequence 
     {
                            status PKIStatusInfo 
                        newSigCert [CON 0] Certificate OPT
                           caCerts [CON 1] Certificates OPT
                       keyPairHist [CON 2] CertifiedKeyPairs 
     }

 **********************************************************************/

#define  ANSC_ASN1_KEYRECREPCONTENT_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetStatus;                        \
    PFN_ASN1_GET_CHILD              GetNewSigCert;                    \
    PFN_ASN1_GET_CHILD              GetCaCerts;                       \
    PFN_ASN1_GET_CHILD              GetKeyPairHist;                   \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_KEYRECREPCONTENT
{
    ANSC_ASN1_KEYRECREPCONTENT_CLASS_CONTENT
}
ANSC_ASN1_KEYRECREPCONTENT,  *PANSC_ASN1_KEYRECREPCONTENT;

#define  ACCESS_ANSC_ASN1_KEYRECREPCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_KEYRECREPCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTIFIEDKEYPAIRS

 CertifiedKeyPairs ::= SequenceOf CertifiedKeyPair  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTIFIEDKEYPAIRS_CLASS_CONTENT                    \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTIFIEDKEYPAIRS
{
    ANSC_ASN1_CERTIFIEDKEYPAIRS_CLASS_CONTENT
}
ANSC_ASN1_CERTIFIEDKEYPAIRS,  *PANSC_ASN1_CERTIFIEDKEYPAIRS;

#define  ACCESS_ANSC_ASN1_CERTIFIEDKEYPAIRS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIFIEDKEYPAIRS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CAKEYUPDANNCONTENT

 CAKeyUpdAnnContent ::= Sequence 
     {
                        oldWithNew Certificate 
                        newWithOld Certificate 
                        newWithNew Certificate 
     }

 **********************************************************************/

#define  ANSC_ASN1_CAKEYUPDANNCONTENT_CLASS_CONTENT                   \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetOldWithNew;                    \
    PFN_ASN1_GET_CHILD              GetNewWithOld;                    \
    PFN_ASN1_GET_CHILD              GetNewWithNew;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CAKEYUPDANNCONTENT
{
    ANSC_ASN1_CAKEYUPDANNCONTENT_CLASS_CONTENT
}
ANSC_ASN1_CAKEYUPDANNCONTENT,  *PANSC_ASN1_CAKEYUPDANNCONTENT;

#define  ACCESS_ANSC_ASN1_CAKEYUPDANNCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CAKEYUPDANNCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTANNCONTENT

 CertAnnContent ::= Certificate 

 **********************************************************************/

#define  ANSC_ASN1_CERTANNCONTENT_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CERTIFICATE_CLASS_CONTENT                               \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTANNCONTENT
{
    ANSC_ASN1_CERTANNCONTENT_CLASS_CONTENT
}
ANSC_ASN1_CERTANNCONTENT,  *PANSC_ASN1_CERTANNCONTENT;

#define  ACCESS_ANSC_ASN1_CERTANNCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTANNCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REVANNCONTENT

 RevAnnContent ::= Sequence 
     {
                            status PKIStatus 
                            certId CertId 
                   willBeRevokedAt GeneralizedTime 
                      badSinceDate GeneralizedTime 
                        crlDetails Extensions OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_REVANNCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetStatus;                        \
    PFN_ASN1_GET_CHILD              GetCertId;                        \
    PFN_ASN1_GET_CHILD              GetWillBeRevokedAt;               \
    PFN_ASN1_GET_CHILD              GetBadSinceDate;                  \
    PFN_ASN1_GET_CHILD              GetCrlDetails;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REVANNCONTENT
{
    ANSC_ASN1_REVANNCONTENT_CLASS_CONTENT
}
ANSC_ASN1_REVANNCONTENT,  *PANSC_ASN1_REVANNCONTENT;

#define  ACCESS_ANSC_ASN1_REVANNCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REVANNCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CRLANNCONTENT

 CRLAnnContent ::= SequenceOf CertificateList  {}

 **********************************************************************/

#define  ANSC_ASN1_CRLANNCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CRLANNCONTENT
{
    ANSC_ASN1_CRLANNCONTENT_CLASS_CONTENT
}
ANSC_ASN1_CRLANNCONTENT,  *PANSC_ASN1_CRLANNCONTENT;

#define  ACCESS_ANSC_ASN1_CRLANNCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CRLANNCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REVREPCONTENT

 RevRepContent ::= Sequence 
     {
                            status PKIStatusInfos 
                          revCerts [CON 0] CertIds OPT
                              crls [CON 1] CertificateLists OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_REVREPCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetStatus;                        \
    PFN_ASN1_GET_CHILD              GetRevCerts;                      \
    PFN_ASN1_GET_CHILD              GetCrls;                          \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REVREPCONTENT
{
    ANSC_ASN1_REVREPCONTENT_CLASS_CONTENT
}
ANSC_ASN1_REVREPCONTENT,  *PANSC_ASN1_REVREPCONTENT;

#define  ACCESS_ANSC_ASN1_REVREPCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REVREPCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKISTATUSINFOS

 PKIStatusInfos ::= SequenceOf PKIStatusInfo  {}

 **********************************************************************/

#define  ANSC_ASN1_PKISTATUSINFOS_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKISTATUSINFOS
{
    ANSC_ASN1_PKISTATUSINFOS_CLASS_CONTENT
}
ANSC_ASN1_PKISTATUSINFOS,  *PANSC_ASN1_PKISTATUSINFOS;

#define  ACCESS_ANSC_ASN1_PKISTATUSINFOS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKISTATUSINFOS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTIDS

 CertIds ::= SequenceOf CertId  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTIDS_CLASS_CONTENT                              \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTIDS
{
    ANSC_ASN1_CERTIDS_CLASS_CONTENT
}
ANSC_ASN1_CERTIDS,  *PANSC_ASN1_CERTIDS;

#define  ACCESS_ANSC_ASN1_CERTIDS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIDS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTIFICATELISTS

 CertificateLists ::= SequenceOf CertificateList  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTIFICATELISTS_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTIFICATELISTS
{
    ANSC_ASN1_CERTIFICATELISTS_CLASS_CONTENT
}
ANSC_ASN1_CERTIFICATELISTS,  *PANSC_ASN1_CERTIFICATELISTS;

#define  ACCESS_ANSC_ASN1_CERTIFICATELISTS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIFICATELISTS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKICONFIRMCONTENT

 PKIConfirmContent ::= NULL 

 **********************************************************************/

#define  ANSC_ASN1_PKICONFIRMCONTENT_CLASS_CONTENT                    \
    /* duplication of the base object class content */                \
    ANSC_ASN1_NULL_CLASS_CONTENT                                      \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKICONFIRMCONTENT
{
    ANSC_ASN1_PKICONFIRMCONTENT_CLASS_CONTENT
}
ANSC_ASN1_PKICONFIRMCONTENT,  *PANSC_ASN1_PKICONFIRMCONTENT;

#define  ACCESS_ANSC_ASN1_PKICONFIRMCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKICONFIRMCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_INFOTYPEANDVALUE

 InfoTypeAndValue ::= Sequence 
     {
                          infoType OID 
                         infoValue InfoValue 
     }

 **********************************************************************/

#define  ANSC_ASN1_INFOTYPEANDVALUE_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetInfoType;                      \
    PFN_ASN1_GET_CHILD              GetInfoValue;                     \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_INFOTYPEANDVALUE
{
    ANSC_ASN1_INFOTYPEANDVALUE_CLASS_CONTENT
}
ANSC_ASN1_INFOTYPEANDVALUE,  *PANSC_ASN1_INFOTYPEANDVALUE;

#define  ACCESS_ANSC_ASN1_INFOTYPEANDVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_INFOTYPEANDVALUE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_ALGORITHMS

 Algorithms ::= SequenceOf AlgorithmIdentifier  {}

 **********************************************************************/

#define  ANSC_ASN1_ALGORITHMS_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_ALGORITHMS
{
    ANSC_ASN1_ALGORITHMS_CLASS_CONTENT
}
ANSC_ASN1_ALGORITHMS,  *PANSC_ASN1_ALGORITHMS;

#define  ACCESS_ANSC_ASN1_ALGORITHMS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ALGORITHMS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_INFOVALUE

 InfoValue ::= Choice 
     {
                     caProtEncCert Certificate 
                  signKeyPairTypes Algorithms 
                   encKeyPairTypes Algorithms 
                  preferredSymmAlg AlgorithmIdentifier 
                   caKeyUpdateInfo CAKeyUpdAnnContent 
                        currentCRL CertificateList 
     }

 **********************************************************************/

#define  INFOVALUE_MASK_CAPROTENCCERT                              0x00
#define  INFOVALUE_MASK_SIGNKEYPAIRTYPES                           0x01
#define  INFOVALUE_MASK_ENCKEYPAIRTYPES                            0x02
#define  INFOVALUE_MASK_PREFERREDSYMMALG                           0x03
#define  INFOVALUE_MASK_CAKEYUPDATEINFO                            0x04
#define  INFOVALUE_MASK_CURRENTCRL                                 0x05
#define  INFOVALUE_MAXI_MASK                                       0x05

#define  ANSC_ASN1_INFOVALUE_CLASS_CONTENT                            \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_INFOVALUE
{
    ANSC_ASN1_INFOVALUE_CLASS_CONTENT
}
ANSC_ASN1_INFOVALUE,  *PANSC_ASN1_INFOVALUE;

#define  ACCESS_ANSC_ASN1_INFOVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_INFOVALUE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_GENMSGCONTENT

 GenMsgContent ::= SequenceOf InfoTypeAndValue  {}

 **********************************************************************/

#define  ANSC_ASN1_GENMSGCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_GENMSGCONTENT
{
    ANSC_ASN1_GENMSGCONTENT_CLASS_CONTENT
}
ANSC_ASN1_GENMSGCONTENT,  *PANSC_ASN1_GENMSGCONTENT;

#define  ACCESS_ANSC_ASN1_GENMSGCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_GENMSGCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_GENREPCONTENT

 GenRepContent ::= SequenceOf InfoTypeAndValue  {}

 **********************************************************************/

#define  ANSC_ASN1_GENREPCONTENT_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_GENREPCONTENT
{
    ANSC_ASN1_GENREPCONTENT_CLASS_CONTENT
}
ANSC_ASN1_GENREPCONTENT,  *PANSC_ASN1_GENREPCONTENT;

#define  ACCESS_ANSC_ASN1_GENREPCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_GENREPCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_ERRORMSGCONTENT

 ErrorMsgContent ::= Sequence 
     {
                     pKIStatusInfo PKIStatusInfo 
                         errorCode Integer OPT
                      errorDetails PKIFreeText 
     }

 **********************************************************************/

#define  ANSC_ASN1_ERRORMSGCONTENT_CLASS_CONTENT                      \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetPKIStatusInfo;                 \
    PFN_ASN1_GET_CHILD              GetErrorCode;                     \
    PFN_ASN1_GET_CHILD              GetErrorDetails;                  \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_ERRORMSGCONTENT
{
    ANSC_ASN1_ERRORMSGCONTENT_CLASS_CONTENT
}
ANSC_ASN1_ERRORMSGCONTENT,  *PANSC_ASN1_ERRORMSGCONTENT;

#define  ACCESS_ANSC_ASN1_ERRORMSGCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ERRORMSGCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTCONFIRMCONTENT

 CertConfirmContent ::= SequenceOf CertStatus  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTCONFIRMCONTENT_CLASS_CONTENT                   \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTCONFIRMCONTENT
{
    ANSC_ASN1_CERTCONFIRMCONTENT_CLASS_CONTENT
}
ANSC_ASN1_CERTCONFIRMCONTENT,  *PANSC_ASN1_CERTCONFIRMCONTENT;

#define  ACCESS_ANSC_ASN1_CERTCONFIRMCONTENT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTCONFIRMCONTENT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTSTATUS

 CertStatus ::= Sequence 
     {
                          certHash OctetString 
                         certReqId Integer 
                        statusInfo PKIStatusInfo OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTSTATUS_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertHash;                      \
    PFN_ASN1_GET_CHILD              GetCertReqId;                     \
    PFN_ASN1_GET_CHILD              GetStatusInfo;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTSTATUS
{
    ANSC_ASN1_CERTSTATUS_CLASS_CONTENT
}
ANSC_ASN1_CERTSTATUS,  *PANSC_ASN1_CERTSTATUS;

#define  ACCESS_ANSC_ASN1_CERTSTATUS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTSTATUS, Linkage)


#endif  /* _ASN1_PKIMESSAGE_INTERFACE_H */

