/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: asn1_certreqmsg_interface.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The ASN.1 object defined in this file

        *   ASN1_CERTREQMSG
        *   ASN1_CERTREQMESSAGES
        *   ASN1_REGINFO
        *   ASN1_CERTREQUEST
        *   ASN1_CERTTEMPLATE
        *   ASN1_OPTIONALVALIDITY
        *   ASN1_CONTROLS
        *   ASN1_CRMFATTRTYPEANDVALUE
        *   ASN1_PROOFOFPOSSESSION
        *   ASN1_POPOSIGNINGKEY
        *   ASN1_POPOSIGNINGKEYINPUT
        *   ASN1_AUTHINFO
        *   ASN1_PKMACVALUE
        *   ASN1_POPOPRIVKEY
        *   ASN1_SUBSEQUENTMESSAGE
        *   ASN1_REGTOKEN
        *   ASN1_AUTHENTICATOR
        *   ASN1_PKIPUBLICATIONINFO
        *   ASN1_PUBINFOS
        *   ASN1_SINGLEPUBINFO
        *   ASN1_PKIARCHIVEOPTIONS
        *   ASN1_ENCRYPTEDKEY
        *   ASN1_ENCRYPTEDVALUE
        *   ASN1_KEYGENPARAMETERS
        *   ASN1_CERTID
        *   ASN1_PROTOCOLENCRKEY
        *   ASN1_CRMFATTRVALUE


    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   12/13/2002  initial revision

 **********************************************************************/


#ifndef  _ASN1_CERTREQMSG_INTERFACE_H
#define  _ASN1_CERTREQMSG_INTERFACE_H

/**********************************************************************

 OBJECT -- ASN1_CERTREQMSG

 CertReqMsg ::= Sequence 
     {
                           certReq CertRequest 
                               pop ProofOfPossession OPT
                           regInfo RegInfo OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTREQMSG_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertReq;                       \
    PFN_ASN1_GET_CHILD              GetPop;                           \
    PFN_ASN1_GET_CHILD              GetRegInfo;                       \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTREQMSG
{
    ANSC_ASN1_CERTREQMSG_CLASS_CONTENT
}
ANSC_ASN1_CERTREQMSG,  *PANSC_ASN1_CERTREQMSG;

#define  ACCESS_ANSC_ASN1_CERTREQMSG(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTREQMSG, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTREQMESSAGES

 CertReqMessages ::= SequenceOf CertReqMsg  {}

 **********************************************************************/

#define  ANSC_ASN1_CERTREQMESSAGES_CLASS_CONTENT                      \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTREQMESSAGES
{
    ANSC_ASN1_CERTREQMESSAGES_CLASS_CONTENT
}
ANSC_ASN1_CERTREQMESSAGES,  *PANSC_ASN1_CERTREQMESSAGES;

#define  ACCESS_ANSC_ASN1_CERTREQMESSAGES(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTREQMESSAGES, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REGINFO

 RegInfo ::= SequenceOf CRMFAttrTypeAndValue  {}

 **********************************************************************/

#define  ANSC_ASN1_REGINFO_CLASS_CONTENT                              \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REGINFO
{
    ANSC_ASN1_REGINFO_CLASS_CONTENT
}
ANSC_ASN1_REGINFO,  *PANSC_ASN1_REGINFO;

#define  ACCESS_ANSC_ASN1_REGINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REGINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTREQUEST

 CertRequest ::= Sequence 
     {
                         certReqId Integer 
                      certTemplate CertTemplate 
                          controls Controls OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTREQUEST_CLASS_CONTENT                          \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCertReqId;                     \
    PFN_ASN1_GET_CHILD              GetCertTemplate;                  \
    PFN_ASN1_GET_CHILD              GetControls;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTREQUEST
{
    ANSC_ASN1_CERTREQUEST_CLASS_CONTENT
}
ANSC_ASN1_CERTREQUEST,  *PANSC_ASN1_CERTREQUEST;

#define  ACCESS_ANSC_ASN1_CERTREQUEST(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTREQUEST, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTTEMPLATE

 CertTemplate ::= Sequence 
     {
                           version [CON 0] IMP Integer OPT
                      serialNumber [CON 1] IMP Integer OPT
                        signingAlg [CON 2] IMP AlgorithmIdentifier OPT
                            issuer [CON 3] IMP Name OPT
                          validity [CON 4] IMP OptionalValidity OPT
                           subject [CON 5] IMP Name OPT
                         publicKey [CON 6] IMP SubjectPublicKeyInfo OPT
                         issuerUID [CON 7] IMP UniqueIdentifier OPT
                        subjectUID [CON 8] IMP UniqueIdentifier OPT
                        extensions [CON 9] IMP Extensions OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTTEMPLATE_CLASS_CONTENT                         \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetVersion;                       \
    PFN_ASN1_GET_CHILD              GetSerialNumber;                  \
    PFN_ASN1_GET_CHILD              GetSigningAlg;                    \
    PFN_ASN1_GET_CHILD              GetIssuer;                        \
    PFN_ASN1_GET_CHILD              GetValidity;                      \
    PFN_ASN1_GET_CHILD              GetSubject;                       \
    PFN_ASN1_GET_CHILD              GetPublicKey;                     \
    PFN_ASN1_GET_CHILD              GetIssuerUID;                     \
    PFN_ASN1_GET_CHILD              GetSubjectUID;                    \
    PFN_ASN1_GET_CHILD              GetExtensions;                    \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTTEMPLATE
{
    ANSC_ASN1_CERTTEMPLATE_CLASS_CONTENT
}
ANSC_ASN1_CERTTEMPLATE,  *PANSC_ASN1_CERTTEMPLATE;

#define  ACCESS_ANSC_ASN1_CERTTEMPLATE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTTEMPLATE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_OPTIONALVALIDITY

 OptionalValidity ::= Sequence 
     {
                         notBefore [CON 0] IMP Time OPT
                          notAfter [CON 1] IMP Time OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_OPTIONALVALIDITY_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetNotBefore;                     \
    PFN_ASN1_GET_CHILD              GetNotAfter;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_OPTIONALVALIDITY
{
    ANSC_ASN1_OPTIONALVALIDITY_CLASS_CONTENT
}
ANSC_ASN1_OPTIONALVALIDITY,  *PANSC_ASN1_OPTIONALVALIDITY;

#define  ACCESS_ANSC_ASN1_OPTIONALVALIDITY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_OPTIONALVALIDITY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CONTROLS

 Controls ::= SequenceOf CRMFAttrTypeAndValue  {}

 **********************************************************************/

#define  ANSC_ASN1_CONTROLS_CLASS_CONTENT                             \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CONTROLS
{
    ANSC_ASN1_CONTROLS_CLASS_CONTENT
}
ANSC_ASN1_CONTROLS,  *PANSC_ASN1_CONTROLS;

#define  ACCESS_ANSC_ASN1_CONTROLS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CONTROLS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CRMFATTRTYPEANDVALUE

 CRMFAttrTypeAndValue ::= Sequence 
     {
                          crmfType OID 
                             value CRMFAttrValue 
     }

 **********************************************************************/

#define  ANSC_ASN1_CRMFATTRTYPEANDVALUE_CLASS_CONTENT                 \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetCrmfType;                      \
    PFN_ASN1_GET_CHILD              GetValue;                         \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CRMFATTRTYPEANDVALUE
{
    ANSC_ASN1_CRMFATTRTYPEANDVALUE_CLASS_CONTENT
}
ANSC_ASN1_CRMFATTRTYPEANDVALUE,  *PANSC_ASN1_CRMFATTRTYPEANDVALUE;

#define  ACCESS_ANSC_ASN1_CRMFATTRTYPEANDVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CRMFATTRTYPEANDVALUE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PROOFOFPOSSESSION

 ProofOfPossession ::= Choice 
     {
                        raVerified [CON 0] IMP NULL 
                         signature [CON 1] IMP POPOSigningKey 
                   keyEncipherment [CON 2] IMP POPOPrivKey 
                      keyAgreement [CON 3] IMP POPOPrivKey OPT
     }

 **********************************************************************/

#define  PROOFOFPOSSESSION_MASK_RAVERIFIED                         0x00
#define  PROOFOFPOSSESSION_MASK_SIGNATURE                          0x01
#define  PROOFOFPOSSESSION_MASK_KEYENCIPHERMENT                    0x02
#define  PROOFOFPOSSESSION_MASK_KEYAGREEMENT                       0x03
#define  PROOFOFPOSSESSION_MAXI_MASK                               0x03

#define  ANSC_ASN1_PROOFOFPOSSESSION_CLASS_CONTENT                    \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PROOFOFPOSSESSION
{
    ANSC_ASN1_PROOFOFPOSSESSION_CLASS_CONTENT
}
ANSC_ASN1_PROOFOFPOSSESSION,  *PANSC_ASN1_PROOFOFPOSSESSION;

#define  ACCESS_ANSC_ASN1_PROOFOFPOSSESSION(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PROOFOFPOSSESSION, Linkage)

/**********************************************************************

 OBJECT -- ASN1_POPOSIGNINGKEY

 POPOSigningKey ::= Sequence 
     {
                       poposkInput [CON 0] IMP POPOSigningKeyInput OPT
               algorithmIdentifier AlgorithmIdentifier 
                         signature BitString 
     }

 **********************************************************************/

#define  ANSC_ASN1_POPOSIGNINGKEY_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetPoposkInput;                   \
    PFN_ASN1_GET_CHILD              GetAlgorithmIdentifier;           \
    PFN_ASN1_GET_CHILD              GetSignature;                     \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_POPOSIGNINGKEY
{
    ANSC_ASN1_POPOSIGNINGKEY_CLASS_CONTENT
}
ANSC_ASN1_POPOSIGNINGKEY,  *PANSC_ASN1_POPOSIGNINGKEY;

#define  ACCESS_ANSC_ASN1_POPOSIGNINGKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_POPOSIGNINGKEY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_POPOSIGNINGKEYINPUT

 POPOSigningKeyInput ::= Sequence 
     {
                          authInfo AuthInfo 
                         publicKey SubjectPublicKeyInfo 
     }

 **********************************************************************/

#define  ANSC_ASN1_POPOSIGNINGKEYINPUT_CLASS_CONTENT                  \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetAuthInfo;                      \
    PFN_ASN1_GET_CHILD              GetPublicKey;                     \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_POPOSIGNINGKEYINPUT
{
    ANSC_ASN1_POPOSIGNINGKEYINPUT_CLASS_CONTENT
}
ANSC_ASN1_POPOSIGNINGKEYINPUT,  *PANSC_ASN1_POPOSIGNINGKEYINPUT;

#define  ACCESS_ANSC_ASN1_POPOSIGNINGKEYINPUT(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_POPOSIGNINGKEYINPUT, Linkage)

/**********************************************************************

 OBJECT -- ASN1_AUTHINFO

 AuthInfo ::= Choice 
     {
                            sender [CON 0] IMP GeneralName 
                      publicKeyMAC PKMACValue 
     }

 **********************************************************************/

#define  AUTHINFO_MASK_SENDER                                      0x00
#define  AUTHINFO_MASK_PUBLICKEYMAC                                0x01
#define  AUTHINFO_MAXI_MASK                                        0x01

#define  ANSC_ASN1_AUTHINFO_CLASS_CONTENT                             \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_AUTHINFO
{
    ANSC_ASN1_AUTHINFO_CLASS_CONTENT
}
ANSC_ASN1_AUTHINFO,  *PANSC_ASN1_AUTHINFO;

#define  ACCESS_ANSC_ASN1_AUTHINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_AUTHINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKMACVALUE

 PKMACValue ::= Sequence 
     {
                             algId AlgorithmIdentifier 
                             value BitString 
     }

 **********************************************************************/

#define  ANSC_ASN1_PKMACVALUE_CLASS_CONTENT                           \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetAlgId;                         \
    PFN_ASN1_GET_CHILD              GetValue;                         \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKMACVALUE
{
    ANSC_ASN1_PKMACVALUE_CLASS_CONTENT
}
ANSC_ASN1_PKMACVALUE,  *PANSC_ASN1_PKMACVALUE;

#define  ACCESS_ANSC_ASN1_PKMACVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKMACVALUE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_POPOPRIVKEY

 POPOPrivKey ::= Choice 
     {
                       thisMessage [CON 0] IMP BitString 
                 subsequentMessage [CON 1] IMP SubsequentMessage 
                             dhMAC [CON 2] IMP BitString 
     }

 **********************************************************************/

#define  POPOPRIVKEY_MASK_THISMESSAGE                              0x00
#define  POPOPRIVKEY_MASK_SUBSEQUENTMESSAGE                        0x01
#define  POPOPRIVKEY_MASK_DHMAC                                    0x02
#define  POPOPRIVKEY_MAXI_MASK                                     0x02

#define  ANSC_ASN1_POPOPRIVKEY_CLASS_CONTENT                          \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_POPOPRIVKEY
{
    ANSC_ASN1_POPOPRIVKEY_CLASS_CONTENT
}
ANSC_ASN1_POPOPRIVKEY,  *PANSC_ASN1_POPOPRIVKEY;

#define  ACCESS_ANSC_ASN1_POPOPRIVKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_POPOPRIVKEY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_SUBSEQUENTMESSAGE

 SubsequentMessage ::= Integer 

 **********************************************************************/

#define  ANSC_ASN1_SUBSEQUENTMESSAGE_CLASS_CONTENT                    \
    /* duplication of the base object class content */                \
    ANSC_ASN1_INTEGER_CLASS_CONTENT                                   \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_SUBSEQUENTMESSAGE
{
    ANSC_ASN1_SUBSEQUENTMESSAGE_CLASS_CONTENT
}
ANSC_ASN1_SUBSEQUENTMESSAGE,  *PANSC_ASN1_SUBSEQUENTMESSAGE;

#define  ACCESS_ANSC_ASN1_SUBSEQUENTMESSAGE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_SUBSEQUENTMESSAGE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_REGTOKEN

 RegToken ::= UTF8String 

 **********************************************************************/

#define  ANSC_ASN1_REGTOKEN_CLASS_CONTENT                             \
    /* duplication of the base object class content */                \
    ANSC_ASN1_STRING_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_REGTOKEN
{
    ANSC_ASN1_REGTOKEN_CLASS_CONTENT
}
ANSC_ASN1_REGTOKEN,  *PANSC_ASN1_REGTOKEN;

#define  ACCESS_ANSC_ASN1_REGTOKEN(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_REGTOKEN, Linkage)

/**********************************************************************

 OBJECT -- ASN1_AUTHENTICATOR

 Authenticator ::= UTF8String 

 **********************************************************************/

#define  ANSC_ASN1_AUTHENTICATOR_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_STRING_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_AUTHENTICATOR
{
    ANSC_ASN1_AUTHENTICATOR_CLASS_CONTENT
}
ANSC_ASN1_AUTHENTICATOR,  *PANSC_ASN1_AUTHENTICATOR;

#define  ACCESS_ANSC_ASN1_AUTHENTICATOR(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_AUTHENTICATOR, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIPUBLICATIONINFO

 PKIPublicationInfo ::= Sequence 
     {
                            action Integer 
                          pubInfos PubInfos OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_PKIPUBLICATIONINFO_CLASS_CONTENT                   \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetAction;                        \
    PFN_ASN1_GET_CHILD              GetPubInfos;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIPUBLICATIONINFO
{
    ANSC_ASN1_PKIPUBLICATIONINFO_CLASS_CONTENT
}
ANSC_ASN1_PKIPUBLICATIONINFO,  *PANSC_ASN1_PKIPUBLICATIONINFO;

#define  ACCESS_ANSC_ASN1_PKIPUBLICATIONINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIPUBLICATIONINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PUBINFOS

 PubInfos ::= SequenceOf SinglePubInfo  {}

 **********************************************************************/

#define  ANSC_ASN1_PUBINFOS_CLASS_CONTENT                             \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCEOF_CLASS_CONTENT                                \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PUBINFOS
{
    ANSC_ASN1_PUBINFOS_CLASS_CONTENT
}
ANSC_ASN1_PUBINFOS,  *PANSC_ASN1_PUBINFOS;

#define  ACCESS_ANSC_ASN1_PUBINFOS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PUBINFOS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_SINGLEPUBINFO

 SinglePubInfo ::= Sequence 
     {
                         pubMethod Integer 
                       pubLocation GeneralName OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_SINGLEPUBINFO_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetPubMethod;                     \
    PFN_ASN1_GET_CHILD              GetPubLocation;                   \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_SINGLEPUBINFO
{
    ANSC_ASN1_SINGLEPUBINFO_CLASS_CONTENT
}
ANSC_ASN1_SINGLEPUBINFO,  *PANSC_ASN1_SINGLEPUBINFO;

#define  ACCESS_ANSC_ASN1_SINGLEPUBINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_SINGLEPUBINFO, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PKIARCHIVEOPTIONS

 PKIArchiveOptions ::= Choice 
     {
                  encryptedPrivKey [CON 0] IMP EncryptedKey 
                  keyGenParameters [CON 1] IMP KeyGenParameters 
              archiveRemGenPrivKey [CON 2] IMP BOOL 
     }

 **********************************************************************/

#define  PKIARCHIVEOPTIONS_MASK_ENCRYPTEDPRIVKEY                   0x00
#define  PKIARCHIVEOPTIONS_MASK_KEYGENPARAMETERS                   0x01
#define  PKIARCHIVEOPTIONS_MASK_ARCHIVEREMGENPRIVKEY               0x02
#define  PKIARCHIVEOPTIONS_MAXI_MASK                               0x02

#define  ANSC_ASN1_PKIARCHIVEOPTIONS_CLASS_CONTENT                    \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PKIARCHIVEOPTIONS
{
    ANSC_ASN1_PKIARCHIVEOPTIONS_CLASS_CONTENT
}
ANSC_ASN1_PKIARCHIVEOPTIONS,  *PANSC_ASN1_PKIARCHIVEOPTIONS;

#define  ACCESS_ANSC_ASN1_PKIARCHIVEOPTIONS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PKIARCHIVEOPTIONS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_ENCRYPTEDKEY

 EncryptedKey ::= Choice 
     {
                    encryptedValue EncryptedValue 
                     envelopedData [CON 0] IMP EnvelopedData 
     }

 **********************************************************************/

#define  ENCRYPTEDKEY_MASK_ENCRYPTEDVALUE                          0x00
#define  ENCRYPTEDKEY_MASK_ENVELOPEDDATA                           0x01
#define  ENCRYPTEDKEY_MAXI_MASK                                    0x01

#define  ANSC_ASN1_ENCRYPTEDKEY_CLASS_CONTENT                         \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_ENCRYPTEDKEY
{
    ANSC_ASN1_ENCRYPTEDKEY_CLASS_CONTENT
}
ANSC_ASN1_ENCRYPTEDKEY,  *PANSC_ASN1_ENCRYPTEDKEY;

#define  ACCESS_ANSC_ASN1_ENCRYPTEDKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ENCRYPTEDKEY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_ENCRYPTEDVALUE

 EncryptedValue ::= Sequence 
     {
                       intendedAlg [CON 0] IMP AlgorithmIdentifier OPT
                           symmAlg [CON 1] IMP AlgorithmIdentifier OPT
                        encSymmKey [CON 2] IMP BitString OPT
                            keyAlg [CON 3] IMP AlgorithmIdentifier OPT
                         valueHint [CON 4] IMP OctetString OPT
                          encValue BitString 
     }

 **********************************************************************/

#define  ANSC_ASN1_ENCRYPTEDVALUE_CLASS_CONTENT                       \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetIntendedAlg;                   \
    PFN_ASN1_GET_CHILD              GetSymmAlg;                       \
    PFN_ASN1_GET_CHILD              GetEncSymmKey;                    \
    PFN_ASN1_GET_CHILD              GetKeyAlg;                        \
    PFN_ASN1_GET_CHILD              GetValueHint;                     \
    PFN_ASN1_GET_CHILD              GetEncValue;                      \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_ENCRYPTEDVALUE
{
    ANSC_ASN1_ENCRYPTEDVALUE_CLASS_CONTENT
}
ANSC_ASN1_ENCRYPTEDVALUE,  *PANSC_ASN1_ENCRYPTEDVALUE;

#define  ACCESS_ANSC_ASN1_ENCRYPTEDVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_ENCRYPTEDVALUE, Linkage)

/**********************************************************************

 OBJECT -- ASN1_KEYGENPARAMETERS

 KeyGenParameters ::= OctetString 

 **********************************************************************/

#define  ANSC_ASN1_KEYGENPARAMETERS_CLASS_CONTENT                     \
    /* duplication of the base object class content */                \
    ANSC_ASN1_STRING_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_KEYGENPARAMETERS
{
    ANSC_ASN1_KEYGENPARAMETERS_CLASS_CONTENT
}
ANSC_ASN1_KEYGENPARAMETERS,  *PANSC_ASN1_KEYGENPARAMETERS;

#define  ACCESS_ANSC_ASN1_KEYGENPARAMETERS(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_KEYGENPARAMETERS, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CERTID

 CertId ::= Sequence 
     {
                            issuer GeneralName 
                      serialNumber Integer 
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTID_CLASS_CONTENT                               \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PFN_ASN1_GET_CHILD              GetIssuer;                        \
    PFN_ASN1_GET_CHILD              GetSerialNumber;                  \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CERTID
{
    ANSC_ASN1_CERTID_CLASS_CONTENT
}
ANSC_ASN1_CERTID,  *PANSC_ASN1_CERTID;

#define  ACCESS_ANSC_ASN1_CERTID(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTID, Linkage)

/**********************************************************************

 OBJECT -- ASN1_PROTOCOLENCRKEY

 ProtocolEncrKey ::= SubjectPublicKeyInfo 

 **********************************************************************/

#define  ANSC_ASN1_PROTOCOLENCRKEY_CLASS_CONTENT                      \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SUBJECTPUBLICKEYINFO_CLASS_CONTENT                      \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_PROTOCOLENCRKEY
{
    ANSC_ASN1_PROTOCOLENCRKEY_CLASS_CONTENT
}
ANSC_ASN1_PROTOCOLENCRKEY,  *PANSC_ASN1_PROTOCOLENCRKEY;

#define  ACCESS_ANSC_ASN1_PROTOCOLENCRKEY(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_PROTOCOLENCRKEY, Linkage)

/**********************************************************************

 OBJECT -- ASN1_CRMFATTRVALUE

 CRMFAttrValue ::= Choice 
     {
                          regToken RegToken 
                     authenticator Authenticator 
                pkiPublicationInfo PKIPublicationInfo 
                 pkiArchiveOptions PKIArchiveOptions 
                         oldCertId CertId 
                   protocolEncrKey ProtocolEncrKey 
                         utf8Pairs UTF8String 
                           certReq CertRequest 
     }

 **********************************************************************/

#define  CRMFATTRVALUE_MASK_REGTOKEN                               0x00
#define  CRMFATTRVALUE_MASK_AUTHENTICATOR                          0x01
#define  CRMFATTRVALUE_MASK_PKIPUBLICATIONINFO                     0x02
#define  CRMFATTRVALUE_MASK_PKIARCHIVEOPTIONS                      0x03
#define  CRMFATTRVALUE_MASK_OLDCERTID                              0x04
#define  CRMFATTRVALUE_MASK_PROTOCOLENCRKEY                        0x05
#define  CRMFATTRVALUE_MASK_UTF8PAIRS                              0x06
#define  CRMFATTRVALUE_MASK_CERTREQ                                0x07
#define  CRMFATTRVALUE_MAXI_MASK                                   0x07

#define  ANSC_ASN1_CRMFATTRVALUE_CLASS_CONTENT                        \
    /* duplication of the base object class content */                \
    ANSC_ASN1_CHOICE_CLASS_CONTENT                                    \
    /* start of object class content */                               \
    /* end of object class content */                                 \

typedef  struct
_ANSC_ASN1_CRMFATTRVALUE
{
    ANSC_ASN1_CRMFATTRVALUE_CLASS_CONTENT
}
ANSC_ASN1_CRMFATTRVALUE,  *PANSC_ASN1_CRMFATTRVALUE;

#define  ACCESS_ANSC_ASN1_CRMFATTRVALUE(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CRMFATTRVALUE, Linkage)


#endif  /* _ASN1_CERTREQMSG_INTERFACE_H */

