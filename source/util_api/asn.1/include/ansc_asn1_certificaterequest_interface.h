/*
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2015 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

/**********************************************************************
   Copyright [2014] [Cisco Systems, Inc.]
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
**********************************************************************/

/**********************************************************************

    MODULE: ansc_asn1_CertificateRequest_interface.h

        ASN.1 ANSC Code Generated by Cisco Systems, Inc.

    ---------------------------------------------------------------

    DESCRIPTION:

        The ASN.1 object defined in this file

        *   ANSC_ASN1_CERTIFICATEREQUEST
        *   ANSC_ASN1_CERTIFICATIONREQUESTINFO


    ---------------------------------------------------------------

    ENVIRONMENT:

        platform independent

    ---------------------------------------------------------------

    AUTHOR:

        ASNMAGIC ANSC CODE GENERATOR 1.0

    ---------------------------------------------------------------

    REVISION HISTORY:

        *   04/29/2002  initial revision

 **********************************************************************/


#ifndef  _ANSC_ASN1_CERTIFICATEREQUEST_INTERFACE_H
#define  _ANSC_ASN1_CERTIFICATEREQUEST_INTERFACE_H

/**********************************************************************

 OBJECT -- ANSC_ASN1_CERTIFICATEREQUEST

 CertificateRequest ::= Sequence 
     {
            certificateRequestInfo CertificationRequestInfo 
      signatureAlgorithmIdentifier SignatureAlgorithmIdentifier 
                         signature BitString 
     }

 **********************************************************************/

typedef SIGNATURE_TYPE
(*PFN_PKCS10_GET_SIGNATURE_TYPE)
    (
        ANSC_HANDLE                 hThisObject
    );

typedef BOOLEAN
(*PFN_PKCS10_SET_SIGNATURE_ALG)
    (
        ANSC_HANDLE                 hThisObject,
        SIGNATURE_TYPE              signType
    );

typedef BOOLEAN
(*PFN_PKCS10_SET_PUBLIC_KEYINFO)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hKeyInfo
    );

typedef BOOLEAN
(*PFN_PKCS10_VERIFY)
    (
        ANSC_HANDLE                 hThisObject
    );

typedef BOOLEAN
(*PFN_PKCS10_INIT_NAME)
    (
        ANSC_HANDLE                 hThisObject,
        PALCERTIFICATE_ATTRIBUTE    pAttrObject
    );

typedef BOOLEAN
(*PFN_PKCS10_INIT_KEYPAIR)
    (
        ANSC_HANDLE                 hThisObject,
        PKI_KEY_TYPE                keyType,
        ANSC_HANDLE                 hKeyPairHandle
    );

typedef BOOLEAN
(*PFN_PKCS10_INIT_WITHCRYPTO)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hCryptAPI
    );

typedef BOOLEAN
(*PFN_PKCS10_SIGN)
    (
        ANSC_HANDLE                 hThisObject,
        ANSC_HANDLE                 hData
    );

typedef BOOLEAN
(*PFN_PKCS10_SIGN_PARAM)
    (
        ANSC_HANDLE                 hThisObject,
        PKI_KEY_TYPE                keyType,
        ANSC_HANDLE                 hData
    );

#define  ANSC_ASN1_CERTIFICATEREQUEST_CLASS_CONTENT                   \
    /* duplication of the base object class content */                \
    ANSC_ASN1_SEQUENCE_CLASS_CONTENT                                  \
    /* start of object class content */                               \
    PUCHAR                          pSignedData;                      \
    ULONG                           uSignedLength;                    \
    PFN_ASN1_GET_CHILD              GetCertificateRequestInfo;        \
    PFN_ASN1_GET_CHILD              GetSignatureAlgorithmIdentifier;  \
    PFN_ASN1_GET_CHILD              GetSignature;                     \
    PFN_PKCS10_INIT_NAME            InitName;                         \
    PFN_PKCS10_SET_SIGNATURE_ALG    SetSignatureAlg;                  \
    PFN_PKCS10_GET_SIGNATURE_TYPE   GetSignatureType;                 \
    PFN_PKCS10_SET_PUBLIC_KEYINFO   SetPublicKeyInfo;                 \
    PFN_ASN1_GET_CHILD              GetSubjectHandle;                 \
    PFN_PKCS10_VERIFY               Verify;                           \
    PFN_PKCS10_SIGN                 SignWithPrivateKeyInfo;           \
    PFN_PKCS10_SIGN                 SignWithCryptAPI;                 \
    PFN_PKCS10_SIGN_PARAM           SignWithKeyParam;                 \
    PFN_PKCS10_INIT_KEYPAIR         InitKeyPair;                      \
    PFN_PKCS10_INIT_WITHCRYPTO      InitWithCryptAPI;                 \
    /* end of object class content */                                 \


typedef  struct
_ANSC_ASN1_CERTIFICATEREQUEST
{
    ANSC_ASN1_CERTIFICATEREQUEST_CLASS_CONTENT
}
ANSC_ASN1_CERTIFICATEREQUEST,  *PANSC_ASN1_CERTIFICATEREQUEST;

#define  ACCESS_ANSC_ASN1_CERTIFICATEREQUEST(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIFICATEREQUEST, Linkage)

/**********************************************************************

 OBJECT -- ANSC_ASN1_CERTIFICATIONREQUESTINFO

 CertificationRequestInfo ::= Sequence 
     {
                           version Integer 
                           subject Name 
                     subjectPKInfo SubjectPublicKeyInfo 
                        attributes [CON 0] IMP Attributes OPT
     }

 **********************************************************************/

#define  ANSC_ASN1_CERTIFICATIONREQUESTINFO_CLASS_CONTENT ANSC_ASN1_SEQUENCE_CLASS_CONTENT

typedef  struct
_ANSC_ASN1_CERTIFICATIONREQUESTINFO
{
    ANSC_ASN1_CERTIFICATIONREQUESTINFO_CLASS_CONTENT
}
ANSC_ASN1_CERTIFICATIONREQUESTINFO,  *PANSC_ASN1_CERTIFICATIONREQUESTINFO;

#define  ACCESS_ANSC_ASN1_CERTIFICATIONREQUESTINFO(p)    \
         ACCESS_CONTAINER(p, ANSC_ASN1_CERTIFICATIONREQUESTINFO, Linkage)


#endif  /*_ANSC_ASN1_CERTIFICATEREQUEST_INTERFACE_H*/


